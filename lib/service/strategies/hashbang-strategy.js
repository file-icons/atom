"use strict";const IconTables=require("../../icons/icon-tables.js"),HeaderStrategy=require("./header-strategy.js"),{executableIcon}=IconTables;class HashbangStrategy extends HeaderStrategy{constructor(){super({name:"hashbangs",priority:5})}matchIcon(resource){const tokens=null===resource.data?null:this.getFirstLine(resource.data).match(/^#!(?:(?:\s*\S*\/|\s*(?=perl6?))(\S+))(?:(?:\s+\S+=\S*)*\s+(\S+))?/);if(!tokens)return null;const name="env"===tokens[1]?(tokens[2]||"").split("/").pop():tokens[1];// TypeScript source which compiles an executable Node file (#606)
if("node"===name&&/\.tsx?$/i.test(resource.name))return null;let result=IconTables.matchInterpreter(name);// Valid hashbang, unrecognised interpreter
if(!result){const{executable}=resource;// Stats currently unavailable
if(null===executable){const onStats=resource.onDidLoadStats(()=>{onStats.dispose(),resource.executable&&resource.icon.add(executableIcon,this.priority)})}else executable&&(result=executableIcon)}return result||null}}module.exports=new HashbangStrategy;